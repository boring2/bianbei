<style lang="less">
@border-color: rgb(220, 220, 220);

.history {
  margin-top: 100rpx;
}

.history-title {
  font-size: 50rpx;
  font-weight: 500;
  margin-left: 30rpx;
}
.split {
  height:1px;
  border-top: 1px solid @border-color;
  margin: 30rpx 0 30rpx 30rpx;
}
.topic-view {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items:center;
}
.topic-wrap {
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 686rpx;
  height: 224rpx;
  padding: 0 40rpx;
  border-radius: 10rpx;
  margin-bottom: 20rpx;
  color: white;
  .topic-title {
    font-size: 36rpx;
    width: 100%;
    display: flex;
    align-items:center;
    text-overflow: ellipsis;
    overflow: hidden;
    display:-webkit-box;
    -webkit-line-clamp:2;
    -webkit-box-orient:vertical;
    line-height: 1.5;
  }
  .topic-date-count {
    font-size: 28rpx;
  }
  .topic-date {
    text-align: right;
  }
}

</style>
<template>
  <view class="history-page">
    <view class="history">
      <text class="history-title">‚è≥ ÂéÜÂè≤ËØùÈ¢ò</text>
    </view>
    <view class="split"></view>
    <view class="topic-view">
      <repeat for="{{topics}}" key="index" index="index" item="topic">
        <view class="topic-wrap" @tap="tapTitle({{topic.objectId}})" style="background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url({{topic.img}}) center / cover no-repeat;">
          <view class="topic-title">{{topic.content}}</view>
          <view class="topic-date-count">
            <view class="topic-date">üóì {{topic.createdAt}} </view>
          </view>
        </view>
      </repeat>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import api from '../utils/api'
import errorHandler from '../utils/error'

export default class Past extends wepy.page {
  config = {
    navigationBarTitleText: 'ÁºñÂëóÂéÜÂè≤'
  }

  data = {
    topics: []
  }

  onLoad() {
    wx.showLoading({
      title: 'Ê≠£Âú®Âä†ËΩΩ...',
      mask: true
    })
    wx.showNavigationBarLoading()
    this.fetchTopics()
  }

  async fetchTopics () {
    try {
      let topics = await api.getTopics()
      this.topics = topics.data
      this.topics.map((topic) => {
        topic.createdAt = this._resolveDate(topic.createdAt)
      })
      this.$apply()
    } catch (err) {
      console.error('fetchTopics', err)
      errorHandler(err)
    }
  }

  _resolveDate (date) {
    return date.split('T')[0]
  }

  methods = {
    tapTitle (id) {
      let url = 'detail?id=' + id
      console.log(url)
      wx.navigateTo({
        url
      })
    }
  }
}
</script>
